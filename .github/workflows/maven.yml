name: My Profile
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
jobs:
  tests:
    name: Unit tests
    #Run on Ubuntu using the latest version
    runs-on: ubuntu-latest
    #Job's steps
    steps:
      #Check-out your repository under $GITHUB_WORKSPACE, so your workflow can access it
      - uses: actions/checkout@v1
      #Set up JDK 11
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: '11'
      #Set up Maven cache
      - name: Cache Maven packages
        #This action allows caching dependencies and build outputs to improve workflow execution time.
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      #Run Tests
      - name: Run Tests
        run: mvn -B test
      - name: Test Report
        uses: dorny/test-reporter@v1
        if: success() || failure()    # run this step even if previous step failed
        with:
          name: JEST Tests            # Name of the check run which will be created
          path: target/surefire-reports/TEST-*.xml    # Path to test results
          reporter: java-junit        # Format of test results
  #Build's job
  build:
    needs: tests
    name: Build image and Push to Docker
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: maven
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build with Maven and Push to Docker Hub
        run: mvn package -DskipTests=true -Pprod jib:build
  deploy:
    needs: build
    name: Pull from Docker and Deploy to AWS EC2
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Pull & Run from Hub
      uses: appleboy/ssh-action@master
      with:
        host: ec2-13-234-115-93.ap-south-1.compute.amazonaws.com
        username: ec2-user
        key: ${{secrets.AWS_PRIVATE_KEY}}
        envs: HITHUB_SHA
        script: |
          sudo yum install docker -y
          sudo systemctl restart docker
          sudo systemctl enable docker
          sudo systemctl restart docker
          sudo docker pull learnwithparth/sample
          sudo docker stop sample
          sudo docker rm sample
          sudo docker run --name sample -p 80:8080 learnwithparth/sample
