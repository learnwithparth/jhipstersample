name: My Profile
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
jobs:
  tests:
    name: Unit tests
    #Run on Ubuntu using the latest version
    runs-on: ubuntu-latest
    #Job's steps
    steps:
      #Check-out your repository under $GITHUB_WORKSPACE, so your workflow can access it
      - uses: actions/checkout@v1
      #Set up JDK 1.8
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: '11'
      #Set up Maven cache
      - name: Cache Maven packages
        #This action allows caching dependencies and build outputs to improve workflow execution time.
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      #Run Tests
      - name: Run Tests
        run: mvn -B test
      - name: Test Report
        uses: dorny/test-reporter@v1
        if: success() || failure()    # run this step even if previous step failed
        with:
          name: JEST Tests            # Name of the check run which will be created
          path: target/surefire-reports/TEST-*.xml    # Path to test results
          reporter: java-junit        # Format of test results
  #Build's job
  build:
    needs: tests
    name: Build and Push
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: '11'
        distribution: 'adopt'
        cache: maven
    - name: Build with Maven
      run: mvn -ntp -Pprod verify jib:dockerBuild
    - name: push-image-to-docker-hub
      uses: actions/checkout@v2 # first action : checkout source code
    - name: docker login
      run: | # log into docker hub account
        docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
    - name: Docker Push
      run: docker push $DOCKER_USER/sample
  deploy:
    needs: build
    name: Pull and Deploy
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Pull & Run from Hub
      uses: appleboy/ssh-action@master
      with:
        host: ec2-65-1-109-3.ap-south-1.compute.amazonaws.com
        username: ec2-user
        key: ${{secrets.AWS_PRIVATE_KEY}}
        envs: HITHUB_SHA
        script: |
          sudo docker pull learnwithparth/myprofile
          sudo docker stop mywebsite
          sudo docker rm mywebsite
          sudo docker run --detach --name mywebsite -p 443:443 learnwithparth/myprofile
